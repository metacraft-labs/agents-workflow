The VCSRepo helper abstracts Git, Mercurial, Bazaar and Fossil commands.
When writing task files, use binary mode to avoid CRLF conversion on Windows.

# DevContainer Caching Strategy

## Cache Synchronization Commands
- `sync-cargo-caches`: Developer command to sync container caches with host system
- Automatically runs on container start via postStartCommand
- Can be run manually anytime to pick up new host packages

## Persistent Storage Volumes
- `agents-workflow-nix-store`: Persists Nix packages across container rebuilds
- `agents-workflow-cargo-cache`: Caches Rust/Cargo dependencies and build artifacts

Benefits:
- Faster package installation (no re-downloading)
- Reduced bandwidth usage
- Incremental sync - only new packages are copied
- Manual control over when sync happens

## Cache Sync Behavior
- Nix substituters: Configured once at build time
- Cargo cache: Synced at container start and on-demand
- Efficient copying with COW/hard links when possible
- Graceful fallback when host caches unavailable

## API Key Management
Environment variables are propagated from host to container:
- OPENAI_API_KEY: Required for OpenAI Codex integration
- GITHUB_TOKEN: For GitHub API access and Copilot authentication
- Custom API keys can be added to containerEnv in devcontainer.json

Security considerations:
- Keys are not stored in container images
- Environment-based propagation is secure and flexible
- Keys are only available during container runtime

## Nix Flakes Configuration
- No channels configuration needed (removed .devcontainer/nix file)
- Flakes provide deterministic package management
- Experimental features enabled for full flake support

## Performance Optimizations
- Nix configured for multi-core builds (cores = 0, max-jobs = auto)
- Cargo cache persisted to avoid re-downloading crates
- Build tools pre-installed for native dependency compilation

# Agent Task Target Remote Recording

When agent-task is executed, the commit message now includes:
- Start-Agent-Branch: {task branch} (renamed from start-agent-task for consistency)
- Target-Remote: {HTTP URL of default remote}

The format ensures no empty line between Start-Agent-Branch and Target-Remote lines.
SSH URLs are automatically converted to HTTPS format in the Target-Remote line.

When get-task is executed with --autopush, the system:
1. Extracts the target remote URL from "Target-Remote:" line using regex: `^Target-Remote:\s*(.+?)$/m`
2. Extracts the branch name from "Start-Agent-Branch:" line using regex: `^Start-Agent-Branch:\s*(.+?)$/m`
3. Uses extracted values to generate GIT_MESSAGE with proper remote/branch info
4. Falls back to placeholder values if extraction fails

VCSRepo class supports:
- default_remote_http_url(): Gets HTTP URL of default remote with SSH-to-HTTPS conversion
- commit_message(commit_hash): Retrieves commit message for specific commit
- latest_agent_branch_commit(): Finds the last commit containing the
  'Start-Agent-Branch:' marker in the current branch
- SSH URL conversion handles multiple formats:
  - git@host:path -> https://host/path
  - ssh://git@host/path -> https://host/path
  - ssh://git@host:port/path -> https://host/path (port removed)

