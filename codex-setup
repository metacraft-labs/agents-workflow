#!/usr/bin/env bash

AGENTS_WORKFLOW_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"

# Configure ~/.netrc for Git hosting services
NETRC_CONTENT=""
if [ -n "${GITHUB_TOKEN}" ]; then
  NETRC_CONTENT+=$'machine github.com\n  login x-access-token\n  password '${GITHUB_TOKEN}$'\n'
fi
if [ -n "${GITLAB_TOKEN}" ]; then
  NETRC_CONTENT+=$'machine gitlab.com\n  login oauth2\n  password '${GITLAB_TOKEN}$'\n'
fi
if [ -n "${BITBUCKET_TOKEN}" ]; then
  NETRC_CONTENT+=$'machine bitbucket.org\n  login x-token-auth\n  password '${BITBUCKET_TOKEN}$'\n'
fi
if [ -n "$NETRC_CONTENT" ]; then
  echo "Configuring ~/.netrc for git authentication"
  printf "%s" "$NETRC_CONTENT" > "$HOME/.netrc"
  chmod 600 "$HOME/.netrc"
  GET_TASK_CMD="get-task --autopush"
else
  GET_TASK_CMD="get-task"
fi

cat > ../AGENTS.md << EOF
When you a given a task description or developer instructions that
just state "go", execute the shell command \`${GET_TASK_CMD}\` under
the repository root and follow the instructions provided in the output.

When the task description or developer instructions are not "go", before
you do anything else, record a verbatim copy of them with the following
shell command:

start-work --branch-name "<TASK_BRANCH_NAME>" --task-description "<message>"

<TASK_BRANCH_NAME> should be an appropriate short branch name that describes
well the task description or developer instructions. "<message>" should be
a verbatim copy of the task description or developer instructions (including
new line characters and other punctuation). When running the shell commands,
make sure to escape any characters that may cause issues, such as quotes,
backslashes, and dollar signs.

I REPEAT: THE start-work COMMAND SHOULD BE EXECUTED ONLY IF THE TASK
DESCRIPTION OR DEVELOPER INSTRUCTIONS ARE NOT "go" AND IT SHOULD BE
EXECUTED IMMEDIATELY UNDER THE REPOSITORY ROOT.

EOF

bash "$AGENTS_WORKFLOW_DIR/common-pre-setup"

SETUP_ENV="$("$AGENTS_WORKFLOW_DIR/bin/get-task" --get-setup-env 2>/dev/null)"
if [ -n "$SETUP_ENV" ]; then
  while IFS= read -r line; do
    export "$line"
  done <<< "$SETUP_ENV"
fi

if [ -f .agents/codex-setup ]; then
  .agents/codex-setup
fi

if [ -f .agents/common-post-setup ]; then
  .agents/common-post-setup
fi

bash "$AGENTS_WORKFLOW_DIR/common-post-setup"
